redis
# bigkey的缺点是什么？
内存占用高，bigkey也会占用大量内存空间，导致内存碎片增加，影响redis性能，对于bigkey的操作可能导致redis实例阻塞，比如del命令删除一个bigkey可能导致redis实例一段时间内无法响应其他客户端请求。
# redis bigkey怎么解决？
对bigkey进行拆分，如将有数万成员的hash key拆分为多个hash key，并保证每个key成员数量在合理范围。对过期数据进行定期清理。
# 什么是热key？
指某个key被请求的频率很高，比如一个redis实例总qps为1万，而其中一个key的qps达到了7千。
# 如何解决热key问题？
创建热key的多个副本，并把他们分不到不同的数据分片，哈希槽，中。
# 布隆过滤器原理介绍一下。
布隆过滤器由初始值为0的位图数组和n个哈希函数构成。先对数据用n个哈希函数做哈希计算，得到n个哈希值，然后对位图数组长度取模，将对应位置设置为1.布隆过滤器说数据在缓存中,但是实际可能不在,而如果他说数据不在缓存中,那么肯定数据不在.
# 如何解决秒杀高并发和超卖现象?
第一种是在数据库层面解决,在查询商品时用**for update加排他锁**。第二种是用分布式锁，**setnx命令**。这个方法缺点是同一个商品在多用户同时下单情况下，会串行化处理，没办法同一个商品大量下单。第三种是用**分布式锁加上分段缓存**，比如商品有100个库存，在redis存5个库存key，value都是20，用户下单时对uid进行mod5计算，看落到哪个key上。

网络
# 说一下tcp的头部。
源端口号，目的端口号，序列号和确认应答号。序列号解决网络包乱序问题，确认应答号解决丢包问题。